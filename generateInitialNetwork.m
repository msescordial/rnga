function [S0,S0r] = generateInitialNetwork(netCostMatrix, BusRouteID, TotalNoOfRoutes,s)
    % We generate the Initial Network N0 with these assumptions:
    % 1. Initial solution S0 is a vector of bus route IDs
    % 2. S0 is generated by selecting s candidate routes at random.
    % 3. All s routes in S0 must contain all bus stops
        
    n = size(netCostMatrix,1);
    stop = 0;
    
        while (stop == 0)

        S0 = [];                            
        S0r = [];

        % Initialize N0 (initial solution)
        a = 1;
        while (a <= s)
            r = randi([1,TotalNoOfRoutes],1);     % generate s random integers     
            route = BusRouteID{r,2};       

            if (length(route) >= 4)     % constraint - route length
                S0(a,1) = r;            % S0 is composed of these s bus route IDs
                S0r{a,1} = route;       % S0r is composed of these s bus routes
                a = a + 1;
            end
        end

        %disp("Initial Route nos.:"); disp(S0);
        %disp("Initial Route nos.:"); disp(S0r);

    
        % Checking if all bus stops are in at least one bus route
        A = zeros(1,n);
        B = zeros(s,n);
        for i=1:n
            A(i) = i;                 % all bus stops
        end
        for i=1:s
            B(i,:) = S0r{i,1};        % all bus routes
        end
        c = ismember(A,B);
    
        if ((n-sum(c)) == 0)
            stop = 1;    
        end
        end
   
end

